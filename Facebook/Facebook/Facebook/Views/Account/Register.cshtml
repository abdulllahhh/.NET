@model Facebook.Models.RegisterModel
@{
    ViewBag.Title = "Register";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <meta name="description" content="My Facebook" />
    <title>
        Facebook
    </title>
    <!-- CSS External Files -->

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous" />
    <link href="@Url.Content("~/Content/normalize.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/Register.css")" rel="stylesheet" type="text/css" />
</head>
<body>
    @Html.Partial("_DefaultNavBar")


  
    <div class="d-flex align-items-center justify-content-center" style="padding:50px">
        <div class="shadow p-3 mb-5 bg-white rounded col-8 justify-content-center">
            @ViewBag.Message

            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
    @Html.AntiForgeryToken()
                    <form class="form-horizontal content">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        <h2 class="text-center"> Create a new account</h2>
                        <fieldset>

                            <div class="form-group">

                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">

                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">

                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">

                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">

                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-lg-10">

                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">

                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">

                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">

                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">

                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">

                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">

                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-lg-2 control-label" })

                                <div class="col-lg-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "col-lg-2 control-label" } })

                                <div class="col-lg-10">
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { htmlAttributes = new { @class = "text-danger" } })

                                </div>
                            </div>
                            <br />
                            <div class="form-group">

                                @Html.LabelFor(model => model.Birthdate, new { htmlAttributes = new { @class = "col-lg-2 control-label" } })
                                <div class="col-lg-10">

                                    @Html.EditorFor(model => model.Birthdate, new { htmlAttribute = new { @class = "col-lg-2 control-label" } })
                                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, new { htmlAttributes = new { @class = "col-lg-2 control-label" } })

                                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <br />

                            <div class="form-group">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-10">

                                    <input type="file" name="ImageFile" id="ImageFile" />
                                    @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <br />
                            <br />
                            <div class="form-group text-center">
                                <div class="col-lg-10 col-lg-offset-2">
                                    <button type="submit" value="create" class="btn btn-primary">Submit</button>
                                </div>
                            </div>

                        </fieldset>
                    </form>}

        </div>
        @if (Model != null && string.IsNullOrEmpty(Model.Message))
        {
            <div class="alert alert-danger">@Model.Message</div>
        }
    </div>
</body>
</html>